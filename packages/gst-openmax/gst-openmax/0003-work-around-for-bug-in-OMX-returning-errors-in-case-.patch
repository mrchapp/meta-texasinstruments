From fbe82c905b9ff418b9fe2049982ce5a12f486906 Mon Sep 17 00:00:00 2001
From: Rob Clark <rob@ti.com>
Date: Tue, 27 Oct 2009 11:08:24 -0500
Subject: [PATCH 03/12] work-around for bug in OMX, returning errors in case of non-error conditions
To: gst_omap4@list.ti.com

Signed-off-by: Rob Clark <rob@ti.com>
---
 omx/gstomx_core.c |   19 +++++++++++++++++++
 1 files changed, 19 insertions(+), 0 deletions(-)

diff --git a/omx/gstomx_core.c b/omx/gstomx_core.c
index a4d42ac..52ab799 100644
--- a/omx/gstomx_core.c
+++ b/omx/gstomx_core.c
@@ -23,6 +23,12 @@
 #include "gstomx_util.h"
 #include "gstomx.h"
 
+
+#ifdef USE_OMXTICORE
+#  include <OMX_TI_Index.h>
+#endif
+
+
 GST_DEBUG_CATEGORY_EXTERN (gstomx_util_debug);
 
 /*
@@ -597,6 +603,19 @@ EventHandler (OMX_HANDLETYPE omx_handle,
             }
         case OMX_EventError:
             {
+#ifdef USE_OMXTICORE
+                switch(data_1)
+                {
+                    case OMX_TI_WarningAttributePending:
+                    case OMX_TI_WarningInsufficientAttributeSize:
+                    case OMX_TI_WarningEosReceived:
+                        GST_ERROR_OBJECT (core->object,
+                                "received invalid error from OMX component: %s (0x%lx)",
+                                g_omx_error_to_str (data_1), data_1);
+                        GST_ERROR_OBJECT (core->object, "ignoring error");
+                        return OMX_ErrorNone;
+                }
+#endif
                 core->omx_error = data_1;
                 GST_ERROR_OBJECT (core->object, "unrecoverable error: %s (0x%lx)",
                                   g_omx_error_to_str (data_1), data_1);
-- 
1.6.3.2

