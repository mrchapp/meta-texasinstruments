Index: git/gst/gstbuffer.c
===================================================================
--- git.orig/gst/gstbuffer.c	2009-08-19 16:27:36.000000000 -0500
+++ git/gst/gstbuffer.c	2009-08-19 16:32:03.000000000 -0500
@@ -232,11 +232,13 @@
   /* create a fresh new buffer */
   copy = gst_buffer_new ();
 
-  /* we simply copy everything from our parent */
-  copy->data = g_memdup (buffer->data, buffer->size);
-  /* make sure it gets freed (even if the parent is subclassed, we return a
-     normal buffer) */
-  copy->malloc_data = copy->data;
+  /* we simply copy everything from our parent... note, special care is taken
+   * to ensure the 'data' field is aligned to the DSP cacheline size (begin
+   * and end)
+   */
+  copy->malloc_data = g_malloc (buffer->size+0x100);
+  copy->data = (void *)((guint32)(copy->malloc_data + 0x80) & ~0x7f);
+  memcpy (copy->data, buffer->data, buffer->size);
   copy->size = buffer->size;
 
   gst_buffer_copy_metadata (copy, buffer, GST_BUFFER_COPY_ALL);
@@ -300,8 +302,11 @@
 
   newbuf = gst_buffer_new ();
 
-  newbuf->malloc_data = g_malloc (size);
-  GST_BUFFER_DATA (newbuf) = newbuf->malloc_data;
+  /* note, special care is taken to ensure the 'data' field is aligned to
+   * the DSP cacheline size (begin and end)
+   */
+  newbuf->malloc_data = g_malloc (size+0x100);
+  GST_BUFFER_DATA (newbuf) = (void *)((guint32)(newbuf->malloc_data + 0x80) & ~0x7f);
   GST_BUFFER_SIZE (newbuf) = size;
 
   GST_CAT_LOG (GST_CAT_BUFFER, "new %p of size %d", newbuf, size);
@@ -331,7 +336,10 @@
   GstBuffer *newbuf;
   guint8 *malloc_data;
 
-  malloc_data = g_try_malloc (size);
+  /* note, special care is taken to ensure the 'data' field is aligned to
+   * the DSP cacheline size (begin and end)
+   */
+  malloc_data = g_try_malloc (size+0x100);
 
   if (G_UNLIKELY (malloc_data == NULL && size != 0)) {
     GST_CAT_WARNING (GST_CAT_BUFFER, "failed to allocate %d bytes", size);
@@ -343,7 +351,7 @@
   newbuf = gst_buffer_new ();
 
   GST_BUFFER_MALLOCDATA (newbuf) = malloc_data;
-  GST_BUFFER_DATA (newbuf) = malloc_data;
+  GST_BUFFER_DATA (newbuf) = (void *)((guint32)(newbuf->malloc_data + 0x80) & ~0x7f);
   GST_BUFFER_SIZE (newbuf) = size;
 
   GST_CAT_LOG (GST_CAT_BUFFER, "new %p of size %d", newbuf, size);
