From 0b249800ba1b3b4346c549dad2ba38d3810038f9 Mon Sep 17 00:00:00 2001
From: Rahul Verma <rahul.verma@ti.com>
Date: Wed, 19 May 2010 19:01:19 +0530
Subject: [PATCH] jpegenc: Implement functions from PPLIB.

Those functions include:
* rotation
* color space conversion
* cropping

Signed-off-by: Rahul Verma <rahul.verma@ti.com>
Signed-off-by: Daniel Diaz <ddiaz@ti.com>
---
 libgoo-ti/goo-ti-jpegenc.c |  241 +++++++++++++++++++++++++++++++++++++++++---
 libgoo-ti/goo-ti-jpegenc.h |    6 +
 2 files changed, 234 insertions(+), 13 deletions(-)

diff --git a/libgoo-ti/goo-ti-jpegenc.c b/libgoo-ti/goo-ti-jpegenc.c
index db9557b..5d09073 100644
--- a/libgoo-ti/goo-ti-jpegenc.c
+++ b/libgoo-ti/goo-ti-jpegenc.c
@@ -57,7 +57,13 @@ enum _GooTiJpegEncProc
 	PROP_APP1H,
 	PROP_APP13I,
 	PROP_APP13W,
-	PROP_APP13H
+	PROP_APP13H,
+	PROP_ROTATION,
+	PROP_CONVERSION,
+	PROP_CROPWIDTH,
+	PROP_CROPHEIGHT,
+	PROP_CROPLEFT,
+	PROP_CROPTOP
 };
 
 typedef struct _APP_INFO {
@@ -73,10 +79,13 @@ typedef enum OMX_JPEGE_INDEXTYPE
     OMX_IndexCustomInputFrameHeight,
     OMX_IndexCustomAPP0,
     OMX_IndexCustomAPP1,
+    OMX_IndexCustomAPP5,
     OMX_IndexCustomAPP13,
     OMX_IndexCustomQFactor,
     OMX_IndexCustomDRI,
-    OMX_IndexCustomHuffmanTable
+    OMX_IndexCustomHuffmanTable,
+    OMX_IndexCustomConversionFlag,
+    OMX_IndexCustomPPLibDynParams
 
 } OMX_INDEXIMAGETYPE;
 
@@ -399,6 +408,122 @@ _goo_ti_jpegenc_get_thumbnail (GooTiJpegEnc* self)
 */
 
 static void
+_goo_ti_jpegenc_set_pplib_params (GooComponent* component)
+{
+
+	g_assert (GOO_IS_TI_JPEGENC (component));
+	GooTiJpegEnc* self = GOO_TI_JPEGENC (component);
+
+	JPGE_PPLIB_DynamicParams *nPplibDynParams;
+	nPplibDynParams = g_new0 (JPGE_PPLIB_DynamicParams, 1);
+	gboolean bEnablePPLibDynParams = FALSE;
+	JPE_CONVERSION_FLAG_TYPE nConversionFlag = JPE_CONV_NONE;
+	OMX_CONFIG_RECTTYPE sCrop;
+
+	OMX_PARAM_PORTDEFINITIONTYPE *in_param;
+	OMX_PARAM_PORTDEFINITIONTYPE *out_param;
+
+	sCrop.nTop = 0;
+	sCrop.nLeft = 0;
+	sCrop.nWidth = self->cropwidth;
+	sCrop.nHeight = self->cropheight;
+
+	goo_component_set_config_by_index (GOO_COMPONENT (self), OMX_IndexConfigCommonInputCrop, &sCrop);
+	GooIterator* iter_in = goo_component_iterate_input_ports (component);
+	goo_iterator_nth (iter_in, 0);
+	GooPort* in_port = GOO_PORT (goo_iterator_get_current (iter_in));
+	g_assert (in_port != NULL);
+
+	in_param = GOO_PORT_GET_DEFINITION (in_port);
+	GooIterator* iter_out = goo_component_iterate_output_ports (component);
+	goo_iterator_nth (iter_out, 0);
+	GooPort* out_port = GOO_PORT (goo_iterator_get_current (iter_out));
+	g_assert (out_port != NULL);
+
+	out_param = GOO_PORT_GET_DEFINITION (out_port);
+	if (in_param->format.image.eColorFormat == OMX_COLOR_FormatYUV420PackedPlanar && out_param->format.image.eColorFormat == OMX_COLOR_FormatCbYCrY)
+	{
+		nConversionFlag = JPE_CONV_YUV420P_YUV422ILE;
+	}
+	else if (in_param->format.image.eColorFormat == OMX_COLOR_Format32bitARGB8888 && out_param->format.image.eColorFormat == OMX_COLOR_FormatCbYCrY)
+	{
+		nConversionFlag = JPE_CONV_RGB32_YUV422I;
+	}
+	else if (in_param->format.image.eColorFormat == OMX_COLOR_FormatCbYCrY && out_param->format.image.eColorFormat == OMX_COLOR_FormatCbYCrY)
+	{
+		if (self->rotation == 90)
+		{
+			nConversionFlag = JPE_CONV_YUV422I_90ROT_YUV422I;
+		}
+		else if (self->rotation == 180)
+		{
+			nConversionFlag = JPE_CONV_YUV422I_180ROT_YUV422I;
+		}
+		else if (self->rotation == 270)
+		{
+			nConversionFlag = JPE_CONV_YUV422I_270ROT_YUV422I;
+		}
+	}
+	else if (in_param->format.image.eColorFormat == OMX_COLOR_FormatCbYCrY && out_param->format.image.eColorFormat == OMX_COLOR_FormatYUV420PackedPlanar)
+	{
+		if (self->rotation == 90)
+		{
+			nConversionFlag = JPE_CONV_YUV422I_90ROT_YUV420P;
+		}
+	}
+
+	goo_component_set_config_by_index (GOO_COMPONENT (self), OMX_IndexCustomConversionFlag, &nConversionFlag);
+	if (((self->rotation == 90) || (self->rotation == 270)) && ((nConversionFlag == JPE_CONV_YUV422I_90ROT_YUV422I) ||
+				(nConversionFlag == JPE_CONV_YUV422I_270ROT_YUV422I) || (nConversionFlag == JPE_CONV_YUV422I_90ROT_YUV420P)))
+	{
+		//swap the input/output height and width
+		bEnablePPLibDynParams = TRUE;
+		nPplibDynParams->ulPPLIBInWidth = in_param->format.image.nFrameHeight;
+		nPplibDynParams->ulPPLIBInHeight = in_param->format.image.nFrameWidth;
+		nPplibDynParams->ulPPLIBOutWidth = out_param->format.image.nFrameHeight;
+		nPplibDynParams->ulPPLIBOutHeight = out_param->format.image.nFrameWidth;
+	}
+
+	//now check for cropping and scaling/zoom here.
+	if (self->cropwidth != 0 || self->cropheight != 0)
+	{
+		//enable pplib cropping and set the values accordingly
+		if ((self->cropwidth%2 == 0) && (self->cropheight%2 == 0) && self->cropwidth >=4 && self->cropheight >= 4)
+		{
+			bEnablePPLibDynParams = TRUE;
+			nPplibDynParams->ulPPLIBEnableCropping = 1;
+			nPplibDynParams->ulPPLIBXstart = self->cropleft;
+			nPplibDynParams->ulPPLIBYstart = self->croptop;
+			nPplibDynParams->ulPPLIBXsize = self->cropwidth;
+			nPplibDynParams->ulPPLIBYsize = self->cropheight;
+			nPplibDynParams->ulPPLIBOutWidth = self->cropwidth;
+			nPplibDynParams->ulPPLIBOutHeight = self->cropheight;
+		}
+		else
+		{
+			nPplibDynParams->ulPPLIBEnableCropping = 1;
+			nPplibDynParams->ulPPLIBXstart = self->cropleft;
+			nPplibDynParams->ulPPLIBYstart = self->croptop;
+			nPplibDynParams->ulPPLIBXsize = in_param->format.image.nFrameHeight;
+			nPplibDynParams->ulPPLIBYsize = in_param->format.image.nFrameWidth;
+			nPplibDynParams->ulPPLIBOutWidth = out_param->format.image.nFrameHeight;
+			nPplibDynParams->ulPPLIBOutHeight = out_param->format.image.nFrameWidth;
+		}
+	}
+
+	if (bEnablePPLibDynParams)
+	{
+		goo_component_set_config_by_index (GOO_COMPONENT (self), OMX_IndexCustomPPLibDynParams, nPplibDynParams);
+	}
+
+	g_free(nPplibDynParams);
+	g_object_unref (iter_in);
+	g_object_unref (iter_out);
+	g_object_unref (in_port);
+	g_object_unref (out_port);
+}
+
+static void
 goo_ti_jpegenc_load_parameters (GooComponent* component)
 {
         g_assert (GOO_IS_TI_JPEGENC (component));
@@ -553,6 +678,8 @@ goo_ti_jpegenc_validate (GooComponent* component)
         g_object_unref (port);
     }
 
+    _goo_ti_jpegenc_set_pplib_params (component);
+
     GOO_OBJECT_DEBUG (self, "");
 
     return;
@@ -639,6 +766,42 @@ goo_ti_jpegenc_set_property (GObject* object, guint prop_id,
 				self->thumbnail->APP13_height = g_value_get_uint(value);
 				break;
 			}
+			case PROP_ROTATION:
+			{
+				GOO_OBJECT_DEBUG (self, "ROTATION");
+				self->rotation = g_value_get_uint (value);
+				break;
+			}
+			case PROP_CONVERSION:
+			{
+				GOO_OBJECT_DEBUG (self, "CONVERSION");
+				self->conversion = g_value_get_uint (value);
+				break;
+			}
+			case PROP_CROPWIDTH:
+			{
+				GOO_OBJECT_DEBUG (self, "CROPWIDTH");
+				self->cropwidth = g_value_get_uint (value);
+				break;
+			}
+			case PROP_CROPHEIGHT:
+			{
+				GOO_OBJECT_DEBUG (self, "CROPHEIGHT");
+				self->cropheight = g_value_get_uint (value);
+				break;
+			}
+			case PROP_CROPLEFT:
+			{
+				GOO_OBJECT_DEBUG (self, "CROPLEFT");
+				self->cropleft = g_value_get_uint (value);
+				break;
+			}
+			case PROP_CROPTOP:
+			{
+				GOO_OBJECT_DEBUG (self, "CROPTOP");
+				self->croptop = g_value_get_uint (value);
+				break;
+			}
 			default:
 			{
 				G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, spec);
@@ -660,12 +823,12 @@ goo_ti_jpegenc_get_property (GObject* object, guint prop_id,
         {
 			case PROP_WIDTH:
 			{
-				self->thumbnail->width = g_value_get_uint (value);
+				g_value_set_uint (value, self->thumbnail->width);
 				break;
 			}
 			case PROP_HEIGHT:
 			{
-				self->thumbnail->height = g_value_get_uint (value);
+				g_value_set_uint (value, self->thumbnail->height);
 				break;
 			}
 			case PROP_COMMENT:
@@ -675,49 +838,79 @@ goo_ti_jpegenc_get_property (GObject* object, guint prop_id,
 			}
 			case PROP_APP0I:
 			{
-				self->thumbnail->APP0_Index = g_value_get_boolean (value);
+				g_value_set_boolean (value, self->thumbnail->APP0_Index);
 				break;
 			}
 			case PROP_APP0W:
 			{
-				self->thumbnail->APP0_width = g_value_get_uint (value);
+				g_value_set_uint (value, self->thumbnail->APP0_width);
 				break;
 			}
 			case PROP_APP0H:
 			{
-			self->thumbnail->APP0_height = g_value_get_uint (value);
+				g_value_set_uint (value, self->thumbnail->APP0_height);
 					break;
 			}
 			case PROP_APP1I:
 			{
-				self->thumbnail->APP1_Index = g_value_get_boolean (value);
+				g_value_set_boolean (value, self->thumbnail->APP1_Index);
 				break;
 			}
 			case PROP_APP1W:
 			{
-				self->thumbnail->APP1_width = g_value_get_uint (value);
+				g_value_set_uint (value, self->thumbnail->APP1_width);
 				break;
 			}
 			case PROP_APP1H:
 			{
-			self->thumbnail->APP1_height = g_value_get_uint (value);
+				g_value_set_uint (value, self->thumbnail->APP1_height);
 					break;
 			}
 			case PROP_APP13I:
 			{
-					self->thumbnail->APP13_Index = g_value_get_boolean (value);
+				g_value_set_boolean (value, self->thumbnail->APP13_Index);
 				break;
 			}
 			case PROP_APP13W:
 			{
-					self->thumbnail->APP13_width = g_value_get_uint (value);
+				g_value_set_uint (value, self->thumbnail->APP13_width);
 				break;
 			}
 			case PROP_APP13H:
 			{
-					self->thumbnail->APP13_height = g_value_get_uint (value);
+				g_value_set_uint (value, self->thumbnail->APP13_height);
 			break;
 			}
+			case PROP_ROTATION:
+			{
+				g_value_set_uint (value, self->rotation);
+				break;
+			}
+			case PROP_CONVERSION:
+			{
+				g_value_set_uint (value, self->conversion);
+				break;
+			}
+			case PROP_CROPWIDTH:
+			{
+				g_value_set_uint (value, self->cropwidth);
+				break;
+			}
+			case PROP_CROPHEIGHT:
+			{
+				g_value_set_uint (value, self->cropheight);
+				break;
+			}
+			case PROP_CROPLEFT:
+			{
+				g_value_set_uint (value, self->cropleft);
+				break;
+			}
+			case PROP_CROPTOP:
+			{
+				g_value_set_uint (value, self->croptop);
+				break;
+			}
 			default:
 				G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, spec);
 				break;
@@ -808,6 +1001,28 @@ goo_ti_jpegenc_class_init (GooTiJpegEncClass* klass)
 									16, 320, THUMBNAIL_HEIGHT, G_PARAM_READWRITE);
         g_object_class_install_property (g_klass, PROP_APP13H, spec);
 
+        /* Rotation */
+        spec = g_param_spec_uint ("rotation", "Rotation", "Image rotation", 0, 360, 0, G_PARAM_READWRITE);
+        g_object_class_install_property (g_klass, PROP_ROTATION, spec);
+
+        /* Conversion */
+        spec = g_param_spec_uint ("conversion", "Conversion", "Image conversion",
+                                  JPE_CONV_NONE, JPE_CONV_YUV422I_180ROT_YUV422I , 0, G_PARAM_READWRITE);
+        g_object_class_install_property (g_klass, PROP_CONVERSION, spec);
+
+        /* Cropping */
+        spec = g_param_spec_uint ("crop-width", "Crop-width", "Width of cropped image", 0, 4096, 0, G_PARAM_READWRITE);
+        g_object_class_install_property (g_klass, PROP_CROPWIDTH, spec);
+
+        spec = g_param_spec_uint ("crop-height", "Crop-height", "Height of cropped image", 0, 4096, 0, G_PARAM_READWRITE);
+        g_object_class_install_property (g_klass, PROP_CROPHEIGHT, spec);
+
+        spec = g_param_spec_uint ("crop-left", "Crop-left", "Number of pixels to be cropped from left", 0, 4096, 0, G_PARAM_READWRITE);
+        g_object_class_install_property (g_klass, PROP_CROPLEFT, spec);
+
+        spec = g_param_spec_uint ("crop-top", "Crop-top", "Number of pixels to be cropped from top", 0, 4096, 0, G_PARAM_READWRITE);
+        g_object_class_install_property (g_klass, PROP_CROPTOP, spec);
+
         GooComponentClass* c_klass = GOO_COMPONENT_CLASS (klass);
         c_klass->load_parameters_func = goo_ti_jpegenc_load_parameters;
         c_klass->set_parameters_func = goo_ti_jpegenc_set_parameters;
diff --git a/libgoo-ti/goo-ti-jpegenc.h b/libgoo-ti/goo-ti-jpegenc.h
index 275859b..2c0f8a8 100644
--- a/libgoo-ti/goo-ti-jpegenc.h
+++ b/libgoo-ti/goo-ti-jpegenc.h
@@ -57,6 +57,12 @@ struct _GooTiJpegEnc
         OMX_IMAGE_PARAM_QFACTORTYPE* param;
 		ThumbnailJpegPrivate* thumbnail;
 		gchar* comment;
+        guint rotation;
+        guint conversion;
+        guint cropwidth;
+        guint cropheight;
+        guint cropleft;
+        guint croptop;
 };
 
 struct _GooTiJpegEncClass
-- 
1.6.3.1

