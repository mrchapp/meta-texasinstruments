From 77ea67fe85928953d02140c4372d8c2c09f8c148 Mon Sep 17 00:00:00 2001
From: Lajos Molnar <lajos@duna.(none)>
Date: Wed, 2 Dec 2009 23:14:21 -0600
Subject: [PATCH] Reworked scaling set-up to work for NV12 1080p buffer.  (Needs more work.)

---
 drivers/video/omap2/dss/dispc.c |  183 ++++++++++++++++++++++++---------------
 1 files changed, 113 insertions(+), 70 deletions(-)
 mode change 100644 => 100755 drivers/video/omap2/dss/dispc.c

diff --git a/drivers/video/omap2/dss/dispc.c b/drivers/video/omap2/dss/dispc.c
old mode 100644
new mode 100755
index 49d12f2..b4ff2f6
--- a/drivers/video/omap2/dss/dispc.c
+++ b/drivers/video/omap2/dss/dispc.c
@@ -53,7 +53,7 @@
 		#define DISPC_BASE              0x58001000
 #endif
 
-#define DISPC_SZ_REGS			SZ_1K
+#define DISPC_SZ_REGS			0x1000
 
 struct dispc_reg { u16 idx; };
 
@@ -1650,7 +1650,7 @@ static void _dispc_set_scaling(enum omap_plane plane,
 		u16 orig_width, u16 orig_height,
 		u16 out_width, u16 out_height,
 		bool ilace, bool five_taps,
-		bool fieldmode)
+		bool fieldmode, int force_scaling)
 {
 	int fir_hinc;
 	int fir_vinc;
@@ -1666,22 +1666,25 @@ static void _dispc_set_scaling(enum omap_plane plane,
 
 	_dispc_set_scale_coef(plane, hscaleup, vscaleup, five_taps);
 
-	if (!orig_width || orig_width == out_width)
-		fir_hinc = 0;
-	else
+	if (force_scaling || (orig_width && orig_width != out_width))
 		fir_hinc = 1024 * orig_width / out_width;
-
-	if (!orig_height || orig_height == out_height)
-		fir_vinc = 0;
 	else
+		fir_hinc = 0;
+
+	if (force_scaling || (orig_height && orig_height != out_height))
 		fir_vinc = 1024 * orig_height / out_height;
+	else
+		fir_vinc = 0;
 
 	_dispc_set_fir(plane, fir_hinc, fir_vinc);
 
 	l = dispc_read_reg(dispc_reg_att[plane]);
 	/* setting attrib register for scaling */
+#ifndef CONFIG_ARCH_OMAP4
 	l &= ~((0x0f << 5) | (0x1 << 21));
-
+#else
+    l &= ~((0x03 << 5) | (0x1 << 21));
+#endif
 	l |= fir_hinc ? (1 << 5) : 0;
 	l |= fir_vinc ? (1 << 6) : 0;
 
@@ -1713,14 +1716,12 @@ static void _dispc_set_scaling_uv(enum omap_plane plane,
 		u16 orig_width, u16 orig_height,
 		u16 out_width, u16 out_height,
 		bool ilace, bool five_taps,
-		bool fieldmode, int color_mode)
+		bool fieldmode, int force_scaling)
 {
 	int i;
 	u32 h;
 	int fir_hinc;
 	int fir_vinc;
-	int check_h;
-	int check_v;
 
 	/* HACK: for NV12: Coefficients for vertical up-sampling */
 	static const u32 coef_vup[8] = {
@@ -1821,94 +1822,105 @@ static void _dispc_set_scaling_uv(enum omap_plane plane,
 		0x0000FE04,
 	};
 
+	static const u32 coef_v_nv12[8] = {
+		0x00000000,
+		0x00000000,
+		0x00000000,
+		0x00000000,
+		0x00000000,
+		0x00000000,
+		0x00000000,
+		0x00000000,
+	};
+
+	static const u32 coef_h_nv12[8] = {
+		0x00800000,
+		0x0D7CF800,
+		0x1E70F5FF,
+		0x335FF5FE,
+		0xF74949F7,
+		0xF55F33FB,
+		0xF5701EFE,
+		0xF87C0DFF,
+	};
+
+	static const u32 coef_hv_nv12[8] = {
+		0x00800000,
+		0x037B02FF,
+		0x0C6F05FE,
+		0x205907FB,
+		0x00404000,
+		0x075920FE,
+		0x056F0CFF,
+		0x027B0300,
+	};
+
 	const u32 *h2_coef;
 	const u32 *hv2_coef;
-	u32 *hv2_coef_mod = NULL;
+	u32 *hv2_coef_mod = NULL; /* horizontal override */
 	const u32 *v2_coef;
 
-	check_h = (2 * out_width > orig_width) ? 1 : 0;
-	check_v = (2 * out_height > orig_height) ? 1 : 0;
-
-	if (check_h)
-		h2_coef = coef_h2_lesser;
-	else
+	if (2 * out_width > orig_width) {
+		if (five_taps) {
+			h2_coef = coef_h2_lesser;
+			hv2_coef_mod = coef_hv2_lesser;
+		} else {
+			h2_coef = coef_h_nv12;
+			hv2_coef_mod = coef_hv_nv12;
+		}
+	} else {
 		h2_coef = coef_h2_greater;
+		hv2_coef_mod = coef_hv2_greater;
+	}
 
-	if (check_v) {
-		v2_coef = coef_v2_lesser;
-		hv2_coef = coef_hv2_lesser;
-
-		if (check_h)
-			hv2_coef_mod = NULL;
-		else
-			hv2_coef_mod = coef_hv2_greater;
+	if (2 * out_height > orig_height) {
+		if (five_taps) {
+			v2_coef = coef_v2_lesser;
+			hv2_coef = coef_hv2_lesser;
+		} else {
+			v2_coef = coef_v_nv12;
+			hv2_coef = coef_hv_nv12;
+		}
 	} else {
 		v2_coef = coef_v2_greater;
 		hv2_coef = coef_hv2_greater;
-		if (check_h)
-			hv2_coef_mod = coef_hv2_lesser;
-		else
-			hv2_coef_mod = NULL;
 	}
 
 	for (i = 0; i < 8; i++) {
 		u32 h, v, hv;
 		h = h2_coef[i];
 		v = v2_coef[i];
-		hv = hv2_coef[i];
+		hv = (hv2_coef[i] & 0xffffff00) | (hv2_coef_mod[i] & 0xff);
 
-		if (hv2_coef_mod) {
-			hv &= 0xffffff00;
-			hv |= (hv2_coef_mod[i] & 0xff);
-		}
 		_dispc_write_firh2_reg(plane, i, h);
 		_dispc_write_firhv2_reg(plane, i, hv);
 		_dispc_write_firv2_reg(plane, i, v);
-
-		if (color_mode == OMAP_DSS_COLOR_NV12) {
-			if (OMAP_DSS_VIDEO3 == plane)
-				hv = dispc_read_reg(
-					DISPC_VID_V3_WB_FIR_COEF_V(0, i));
-			else
-				hv = dispc_read_reg(
-					DISPC_VID_FIR_COEF_V(plane - 1, i));
-
-			hv = coef_vup[i];
-
-			_dispc_write_firv_reg(plane, i, hv);
-		}
 	}
 
-	if ((color_mode == OMAP_DSS_COLOR_NV12) ||
-		(orig_width && (orig_width != out_width)))
+	if (force_scaling || (orig_width && (orig_width != out_width)))
 		fir_hinc = 1024 * orig_width / out_width;
 	else
 		fir_hinc = 0;
 
-	if ((color_mode == OMAP_DSS_COLOR_NV12) ||
-		(orig_height && (orig_height != out_height)))
+	if (force_scaling || (orig_height && (orig_height != out_height)))
 		fir_vinc = 1024 * orig_height / out_height;
 	else
 		fir_vinc = 0;
 
-	/* HACK set for NV12*/
-	if (color_mode == OMAP_DSS_COLOR_NV12) {
-		_dispc_set_fir(plane, fir_hinc, fir_vinc);
-		fir_vinc = fir_vinc / 2;
-		fir_hinc = fir_hinc / 2;
-		h = dispc_read_reg(DISPC_VID_ATTRIBUTES2(plane - 1));
-		h |= (1 << 8); /* set chroma resampling */
-		dispc_write_reg(DISPC_VID_ATTRIBUTES2(plane - 1), h);
+	/* :TRICKY: workaround! adjust 512 to 511 for hinc only */
+	if (fir_hinc == 512)
+		fir_hinc = 511;
 
-		h = dispc_read_reg(dispc_reg_att[plane]);
-		/* setting attrib register for scaling */
+	/* set chroma resampling */
+	REG_FLD_MOD(DISPC_VID_ATTRIBUTES2(plane - 1),
+		(fir_hinc || fir_vinc) ? 1 : 0, 8, 8);
 
-		h |= (1 << 6); /* HACK: enable hresize */
-		h |= (1 << 5); /* HACK: enable vresize */
-		h |= (1 << 21);
+	/* set H scaling */
+	REG_FLD_MOD(dispc_reg_att[plane], fir_hinc ? 1 : 0, 6, 6);
+
+	/* set V scaling */
+	REG_FLD_MOD(dispc_reg_att[plane], fir_vinc ? 1 : 0, 5, 5);
 
-		dispc_write_reg(dispc_reg_att[plane], h);
-	}
 	_dispc_set_fir2(plane, fir_hinc, fir_vinc);
 	_dispc_set_vid_accu2_0(plane, 0x0080, 0);
 	_dispc_set_vid_accu2_1(plane, 0x0080, 0);
@@ -2402,6 +2414,7 @@ static int _dispc_setup_plane(enum omap_plane plane,
 	unsigned long r, mir_x, mir_y;
 	unsigned long tiler_width, tiler_height;
 	void __iomem *reg = NULL;
+	int force_scaling = 0;
 
 	if (paddr == 0)
 		return -EINVAL;
@@ -2486,6 +2499,19 @@ static int _dispc_setup_plane(enum omap_plane plane,
 			return -EINVAL;
 		}
 
+		/* do we have to scale? */
+		force_scaling =
+			/* must use FIR if scaling */
+			(out_width != width || out_height != height ||
+#ifdef CONFIG_ARCH_OMAP4
+			 /* must use FIR for YUV 420 frames */
+			 color_mode == OMAP_DSS_COLOR_NV12 ||
+#endif
+			 /* must use FIR for rotated YUV 422 frames */
+			 ((color_mode == OMAP_DSS_COLOR_YUV2 ||
+			   color_mode == OMAP_DSS_COLOR_UYVY) &&
+			  rotation % 4));
+
 		/* Must use 5-tap filter? */
 		five_taps = height > out_height * 2;
 
@@ -2614,15 +2640,27 @@ static int _dispc_setup_plane(enum omap_plane plane,
 	if (plane != OMAP_DSS_GFX) {
 		_dispc_set_scaling(plane, width, height,
 				   out_width, out_height,
-				   ilace, five_taps, fieldmode);
+				   ilace, five_taps, fieldmode,
+				   force_scaling);
 #ifdef CONFIG_ARCH_OMAP4
 		if (OMAP_DSS_COLOR_YUV2 == color_mode ||
 			OMAP_DSS_COLOR_NV12 == color_mode ||
 			OMAP_DSS_COLOR_UYVY == color_mode) {
 
+			/* adjust orig size for NV12 as it is down-sampled */
+			if (color_mode == OMAP_DSS_COLOR_NV12) {
+				/* :TRICKY: note that width and height is no
+				   longer used elsewhere */
+				width >>= 1;
+				height >>= 1;
+			}
+
 			_dispc_set_scaling_uv(plane, width, height,
 				out_width, out_height, ilace,
-				five_taps, fieldmode, color_mode);
+				five_taps, fieldmode, force_scaling);
+		} else {
+			/* :TRICKY: set chroma resampling for RGB formats */
+			REG_FLD_MOD(DISPC_VID_ATTRIBUTES2(plane - 1), 0, 8, 8);
 		}
 #endif
 		_dispc_set_vid_size(plane, out_width, out_height);
@@ -4125,8 +4163,11 @@ static void dispc_error_worker(struct work_struct *work)
 		struct omap_overlay_manager *manager = NULL;
 		bool enable = false;
 
+		DSSERR("SYNC_LOST_DIGIT\n");
+		/*
 		DSSERR("SYNC_LOST_DIGIT, disabling TV\n");
 
+
 		for (i = 0; i < omap_dss_get_num_overlay_managers(); ++i) {
 			struct omap_overlay_manager *mgr;
 			mgr = omap_dss_get_overlay_manager(i);
@@ -4157,6 +4198,8 @@ static void dispc_error_worker(struct work_struct *work)
 			if (enable)
 				manager->device->enable(manager->device);
 		}
+		*/
+
 	}
 
 	if (errors & DISPC_IRQ_OCP_ERR) {
-- 
1.5.6.3

